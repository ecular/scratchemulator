!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Attribute_Control_Reg	./video.h	/^    uint8_t CRT_Control_Reg[25], Sequence_Reg[5], Graphic_Control_Reg[9], Attribute_Control_Reg[20], Feature_Control_Reg, Input_Status_Reg1;$/;"	m	class:Video
Attribute_Control_Reg_Flag	./video.h	/^    uint8_t Attribute_Control_Reg_Flag\/*0:index.1:data*\/, Graphic_Mode_Flag, Colorful_Flag, Mode_Change_Flag;$/;"	m	class:Video
Attribute_Control_Reg_Index	./video.h	/^    uint8_t CRT_Control_Reg_Index, Sequence_Reg_Index, Graphic_Control_Reg_Index, Attribute_Control_Reg_Index;$/;"	m	class:Video
BIN	./Makefile	/^BIN  = emu$/;"	m
CC	./Makefile	/^CC = g++ -g -Wall -O0 -m32$/;"	m
CFLAG	./Makefile	/^CFLAG = -c -fkeep-inline-functions$/;"	m
CGA_ascii_table	./video.h	/^    uint8_t CGA_ascii_table[0x8000];$/;"	m	class:Video
CGApalette	./video.h	/^    uint32_t CGApalette[16], Table_Data_Reg[256], VGA_Memory[262144], Video_Buffer_Address;$/;"	m	class:Video
CPU_80186	./cpu.cpp	1;"	d	file:
CRT_Control_Reg	./video.h	/^    uint8_t CRT_Control_Reg[25], Sequence_Reg[5], Graphic_Control_Reg[9], Attribute_Control_Reg[20], Feature_Control_Reg, Input_Status_Reg1;$/;"	m	class:Video
CRT_Control_Reg_Index	./video.h	/^    uint8_t CRT_Control_Reg_Index, Sequence_Reg_Index, Graphic_Control_Reg_Index, Attribute_Control_Reg_Index;$/;"	m	class:Video
CalculateRM	./cpu.cpp	/^uint8_t *Cpu::CalculateRM(uint8_t mod_byte, uint8_t opcode)$/;"	f	class:Cpu
CalculateReg16	./cpu.cpp	/^uint16_t *Cpu::CalculateReg16(uint8_t mod_byte)$/;"	f	class:Cpu
CalculateReg8	./cpu.cpp	/^uint8_t *Cpu::CalculateReg8(uint8_t mod_byte)$/;"	f	class:Cpu
CalculateSeg16	./cpu.cpp	/^uint16_t *Cpu::CalculateSeg16(uint8_t mod_byte)$/;"	f	class:Cpu
ChangeMode	./display.cpp	/^void Display::ChangeMode()$/;"	f	class:Display
Colorful_Flag	./video.h	/^    uint8_t Attribute_Control_Reg_Flag\/*0:index.1:data*\/, Graphic_Mode_Flag, Colorful_Flag, Mode_Change_Flag;$/;"	m	class:Video
Cpu	./cpu.cpp	/^Cpu::Cpu()$/;"	f	class:Cpu
Cpu	./cpu.h	/^class Cpu {$/;"	c
Cursor_Position	./video.h	/^    uint16_t Cursor_Position;$/;"	m	class:Video
DAC_Status_Reg	./video.h	/^    uint8_t DAC_Status_Reg, Table_Index_Reg_Read, Table_Index_Reg_Write, Plane_Lock[4];$/;"	m	class:Video
DEBUG	./cpu.cpp	2;"	d	file:
Disk	./disk.cpp	/^Disk::Disk(string filename, uint8_t driver_num)$/;"	f	class:Disk
Disk	./disk.h	/^class Disk {$/;"	c
Disk_handle	./cpu.h	/^    disk_handle *Disk_handle;$/;"	m	class:Cpu
Display	./display.cpp	/^Display::Display()$/;"	f	class:Display
Display	./display.h	/^class Display {$/;"	c
EMU_8253_H	./8253.h	2;"	d
EMU_8259A_H_	./8259a.h	2;"	d
EMU_CPU_H_	./cpu.h	2;"	d
EMU_DISK_H	./disk.h	2;"	d
EMU_DISK_HANDLE_H	./disk_handle.h	2;"	d
EMU_DISPLAY_H	./display.h	2;"	d
EMU_KEYBOARD_H	./keyboard.h	2;"	d
EMU_PORT_HANDLE_H	./port_handle.h	2;"	d
EMU_TIMER_H	./timer.h	2;"	d
EMU_VIDEO_H	./video.h	2;"	d
Exec	./cpu.cpp	/^void Cpu::Exec(uint32_t loops)$/;"	f	class:Cpu
Feature_Control_Reg	./video.h	/^    uint8_t CRT_Control_Reg[25], Sequence_Reg[5], Graphic_Control_Reg[9], Attribute_Control_Reg[20], Feature_Control_Reg, Input_Status_Reg1;$/;"	m	class:Video
GetAH	./cpu.cpp	/^inline uint8_t Cpu::GetAH()$/;"	f	class:Cpu
GetAL	./cpu.cpp	/^inline uint8_t Cpu::GetAL()$/;"	f	class:Cpu
GetAX	./cpu.cpp	/^inline uint16_t Cpu::GetAX()$/;"	f	class:Cpu
GetBH	./cpu.cpp	/^inline uint8_t Cpu::GetBH()$/;"	f	class:Cpu
GetBL	./cpu.cpp	/^inline uint8_t Cpu::GetBL()$/;"	f	class:Cpu
GetBP	./cpu.cpp	/^inline uint16_t Cpu::GetBP()$/;"	f	class:Cpu
GetBX	./cpu.cpp	/^inline uint16_t Cpu::GetBX()$/;"	f	class:Cpu
GetCH	./cpu.cpp	/^inline uint8_t Cpu::GetCH()$/;"	f	class:Cpu
GetCL	./cpu.cpp	/^inline uint8_t Cpu::GetCL()$/;"	f	class:Cpu
GetCS	./cpu.cpp	/^inline uint16_t Cpu::GetCS()$/;"	f	class:Cpu
GetCX	./cpu.cpp	/^inline uint16_t Cpu::GetCX()$/;"	f	class:Cpu
GetDH	./cpu.cpp	/^inline uint8_t Cpu::GetDH()$/;"	f	class:Cpu
GetDI	./cpu.cpp	/^inline uint16_t Cpu::GetDI()$/;"	f	class:Cpu
GetDL	./cpu.cpp	/^inline uint8_t Cpu::GetDL()$/;"	f	class:Cpu
GetDS	./cpu.cpp	/^inline uint16_t Cpu::GetDS()$/;"	f	class:Cpu
GetDX	./cpu.cpp	/^inline uint16_t Cpu::GetDX()$/;"	f	class:Cpu
GetES	./cpu.cpp	/^inline uint16_t Cpu::GetES()$/;"	f	class:Cpu
GetFlag	./cpu.cpp	/^inline uint16_t Cpu::GetFlag()$/;"	f	class:Cpu
GetIP	./cpu.cpp	/^inline uint16_t Cpu::GetIP()$/;"	f	class:Cpu
GetKey	./keyboard.cpp	/^inline uint8_t Keyboard::GetKey()$/;"	f	class:Keyboard
GetSI	./cpu.cpp	/^inline uint16_t Cpu::GetSI()$/;"	f	class:Cpu
GetSP	./cpu.cpp	/^inline uint16_t Cpu::GetSP()$/;"	f	class:Cpu
GetSS	./cpu.cpp	/^inline uint16_t Cpu::GetSS()$/;"	f	class:Cpu
GetStatus	./cpu.cpp	/^inline bool Cpu::GetStatus(void)$/;"	f	class:Cpu
Graphic_Control_Reg	./video.h	/^    uint8_t CRT_Control_Reg[25], Sequence_Reg[5], Graphic_Control_Reg[9], Attribute_Control_Reg[20], Feature_Control_Reg, Input_Status_Reg1;$/;"	m	class:Video
Graphic_Control_Reg_Index	./video.h	/^    uint8_t CRT_Control_Reg_Index, Sequence_Reg_Index, Graphic_Control_Reg_Index, Attribute_Control_Reg_Index;$/;"	m	class:Video
Graphic_Mode_Flag	./video.h	/^    uint8_t Attribute_Control_Reg_Flag\/*0:index.1:data*\/, Graphic_Mode_Flag, Colorful_Flag, Mode_Change_Flag;$/;"	m	class:Video
ICW	./8259a.h	/^    uint8_t ICW[5];$/;"	m	class:Interrupt_Controller_8259a
IMR	./8259a.h	/^    uint8_t IMR;$/;"	m	class:Interrupt_Controller_8259a
IPStep	./cpu.cpp	/^inline void Cpu::IPStep(unsigned int steps)$/;"	f	class:Cpu
IRR	./8259a.h	/^    uint8_t IRR;$/;"	m	class:Interrupt_Controller_8259a
ISR	./8259a.h	/^    uint8_t ISR;$/;"	m	class:Interrupt_Controller_8259a
Init	./cpu.cpp	/^int Cpu::Init(unsigned int ram_size)$/;"	f	class:Cpu
InitDisplay	./display.cpp	/^void Display::InitDisplay()$/;"	f	class:Display
InitKeyboard	./keyboard.cpp	/^void Keyboard::InitKeyboard(Interrupt_Controller_8259a *i8259a_arg)$/;"	f	class:Keyboard
InputThread	./main.cpp	/^void *InputThread(void *keyboard_arg)$/;"	f
Input_Status_Reg1	./video.h	/^    uint8_t CRT_Control_Reg[25], Sequence_Reg[5], Graphic_Control_Reg[9], Attribute_Control_Reg[20], Feature_Control_Reg, Input_Status_Reg1;$/;"	m	class:Video
Intcall	./cpu.cpp	/^void Cpu::Intcall(uint8_t int_num)$/;"	f	class:Cpu
Interrupt_Controller_8259a	./8259a.cpp	/^Interrupt_Controller_8259a::Interrupt_Controller_8259a()$/;"	f	class:Interrupt_Controller_8259a
Interrupt_Controller_8259a	./8259a.h	/^class Interrupt_Controller_8259a {$/;"	c
Interval_Timer_8253	./8253.cpp	/^Interval_Timer_8253::Interval_Timer_8253()$/;"	f	class:Interval_Timer_8253
Interval_Timer_8253	./8253.h	/^class Interval_Timer_8253 {$/;"	c
Keyboard	./keyboard.h	/^class Keyboard {$/;"	c
LDFLAG	./Makefile	/^LDFLAG = -lSDL -lpthread$/;"	m
LoadBIOS	./cpu.cpp	/^bool Cpu::LoadBIOS(string filename)$/;"	f	class:Cpu
LoadRom	./cpu.cpp	/^bool Cpu::LoadRom(uint32_t addr, string filename)$/;"	f	class:Cpu
MAX	./cpu.h	/^    uint64_t MAX;$/;"	m	class:Cpu
MIN	./cpu.h	/^    uint64_t MIN;$/;"	m	class:Cpu
Mode_Change_Flag	./video.h	/^    uint8_t Attribute_Control_Reg_Flag\/*0:index.1:data*\/, Graphic_Mode_Flag, Colorful_Flag, Mode_Change_Flag;$/;"	m	class:Video
MonitorInput	./keyboard.cpp	/^void Keyboard::MonitorInput(void)$/;"	f	class:Keyboard
OBJ	./Makefile	/^OBJ = $(patsubst %.cpp,%.o,$(wildcard *.cpp)) $/;"	m
OCW	./8259a.h	/^    uint8_t OCW[4];$/;"	m	class:Interrupt_Controller_8259a
Plane_Lock	./video.h	/^    uint8_t DAC_Status_Reg, Table_Index_Reg_Read, Table_Index_Reg_Write, Plane_Lock[4];$/;"	m	class:Video
Pop	./cpu.cpp	/^inline uint16_t Cpu::Pop()$/;"	f	class:Cpu
Push	./cpu.cpp	/^inline void Cpu::Push(uint16_t data)$/;"	f	class:Cpu
ReadData16InExe	./cpu.cpp	/^inline uint16_t Cpu::ReadData16InExe()$/;"	f	class:Cpu
ReadData8InExe	./cpu.cpp	/^inline uint8_t Cpu::ReadData8InExe()$/;"	f	class:Cpu
ReadRam16	./cpu.cpp	/^inline uint16_t Cpu::ReadRam16(uint32_t location)$/;"	f	class:Cpu
ReadRam8	./cpu.cpp	/^inline uint8_t Cpu::ReadRam8(uint32_t location)$/;"	f	class:Cpu
Reset	./cpu.cpp	/^int Cpu::Reset()$/;"	f	class:Cpu
RunThread	./main.cpp	/^void *RunThread(void *cpu_arg)$/;"	f
SDL_Screen_Draw	./display.cpp	/^void Display::SDL_Screen_Draw(void *tmp)$/;"	f	class:Display
Sequence_Reg	./video.h	/^    uint8_t CRT_Control_Reg[25], Sequence_Reg[5], Graphic_Control_Reg[9], Attribute_Control_Reg[20], Feature_Control_Reg, Input_Status_Reg1;$/;"	m	class:Video
Sequence_Reg_Index	./video.h	/^    uint8_t CRT_Control_Reg_Index, Sequence_Reg_Index, Graphic_Control_Reg_Index, Attribute_Control_Reg_Index;$/;"	m	class:Video
SetAH	./cpu.cpp	/^inline void Cpu::SetAH(uint8_t value)$/;"	f	class:Cpu
SetAL	./cpu.cpp	/^inline void Cpu::SetAL(uint8_t value)$/;"	f	class:Cpu
SetAX	./cpu.cpp	/^inline void Cpu::SetAX(uint16_t value)$/;"	f	class:Cpu
SetBH	./cpu.cpp	/^inline void Cpu::SetBH(uint8_t value)$/;"	f	class:Cpu
SetBL	./cpu.cpp	/^inline void Cpu::SetBL(uint8_t value)$/;"	f	class:Cpu
SetBP	./cpu.cpp	/^inline void Cpu::SetBP(uint16_t value)$/;"	f	class:Cpu
SetBX	./cpu.cpp	/^inline void Cpu::SetBX(uint16_t value)$/;"	f	class:Cpu
SetCH	./cpu.cpp	/^inline void Cpu::SetCH(uint8_t value)$/;"	f	class:Cpu
SetCL	./cpu.cpp	/^inline void Cpu::SetCL(uint8_t value)$/;"	f	class:Cpu
SetCS	./cpu.cpp	/^inline void Cpu::SetCS(uint16_t value)$/;"	f	class:Cpu
SetCX	./cpu.cpp	/^inline void Cpu::SetCX(uint16_t value)$/;"	f	class:Cpu
SetDH	./cpu.cpp	/^inline void Cpu::SetDH(uint8_t value)$/;"	f	class:Cpu
SetDI	./cpu.cpp	/^inline void Cpu::SetDI(uint16_t value)$/;"	f	class:Cpu
SetDL	./cpu.cpp	/^inline void Cpu::SetDL(uint8_t value)$/;"	f	class:Cpu
SetDS	./cpu.cpp	/^inline void Cpu::SetDS(uint16_t value)$/;"	f	class:Cpu
SetDX	./cpu.cpp	/^inline void Cpu::SetDX(uint16_t value)$/;"	f	class:Cpu
SetES	./cpu.cpp	/^inline void Cpu::SetES(uint16_t value)$/;"	f	class:Cpu
SetFlag	./cpu.cpp	/^inline void Cpu::SetFlag(uint16_t value)$/;"	f	class:Cpu
SetIP	./cpu.cpp	/^inline void Cpu::SetIP(uint16_t value)$/;"	f	class:Cpu
SetKey	./keyboard.cpp	/^inline void Keyboard::SetKey()$/;"	f	class:Keyboard
SetSI	./cpu.cpp	/^inline void Cpu::SetSI(uint16_t value)$/;"	f	class:Cpu
SetSP	./cpu.cpp	/^inline void Cpu::SetSP(uint16_t value)$/;"	f	class:Cpu
SetSS	./cpu.cpp	/^inline void Cpu::SetSS(uint16_t value)$/;"	f	class:Cpu
SetStatus	./cpu.cpp	/^inline void Cpu::SetStatus(bool flag)$/;"	f	class:Cpu
Table_Data_Reg	./video.h	/^    uint32_t CGApalette[16], Table_Data_Reg[256], VGA_Memory[262144], Video_Buffer_Address;$/;"	m	class:Video
Table_Index_Reg_Read	./video.h	/^    uint8_t DAC_Status_Reg, Table_Index_Reg_Read, Table_Index_Reg_Write, Plane_Lock[4];$/;"	m	class:Video
Table_Index_Reg_Write	./video.h	/^    uint8_t DAC_Status_Reg, Table_Index_Reg_Read, Table_Index_Reg_Write, Plane_Lock[4];$/;"	m	class:Video
Table_Read_Step	./video.h	/^    uint8_t Table_Read_Step, Table_Write_Step; \/*1:Red 2:Green 3:Blue*\/$/;"	m	class:Video
Table_Write_Step	./video.h	/^    uint8_t Table_Read_Step, Table_Write_Step; \/*1:Red 2:Green 3:Blue*\/$/;"	m	class:Video
TranslateToScancode	./keyboard.cpp	/^uint8_t Keyboard::TranslateToScancode(uint16_t SDL_code)$/;"	f	class:Keyboard
VGA_Memory	./video.h	/^    uint32_t CGApalette[16], Table_Data_Reg[256], VGA_Memory[262144], Video_Buffer_Address;$/;"	m	class:Video
Video	./video.cpp	/^Video::Video()$/;"	f	class:Video
Video	./video.h	/^class Video {$/;"	c
Video_Buffer_Address	./video.h	/^    uint32_t CGApalette[16], Table_Data_Reg[256], VGA_Memory[262144], Video_Buffer_Address;$/;"	m	class:Video
Video_Mode	./video.h	/^    uint8_t screen_update_flag, Video_Mode;$/;"	m	class:Video
WriteRam16	./cpu.cpp	/^inline void Cpu::WriteRam16(uint32_t location, uint16_t value)$/;"	f	class:Cpu
WriteRam8	./cpu.cpp	/^inline void Cpu::WriteRam8(uint32_t location, uint8_t value)$/;"	f	class:Cpu
active	./8253.h	/^    uint8_t rw_mode[3], rw_step[3], active[3];$/;"	m	class:Interval_Timer_8253
ascii_loop	./testasm/codegolf.asm	/^ascii_loop:$/;"	l
boxloop	./testasm/codegolf.asm	/^boxloop:$/;"	l
boxloop2	./testasm/codegolf.asm	/^boxloop2:$/;"	l
calcsq	./testasm/codegolf.asm	/^calcsq:$/;"	l
calcsqfinish	./testasm/codegolf.asm	/^calcsqfinish:$/;"	l
calcsqloop	./testasm/codegolf.asm	/^calcsqloop:$/;"	l
calltest	./testasm/codegolf.asm	/^calltest:$/;"	l
change_print_16bit	./cpu.cpp	/^void Cpu::change_print_16bit(uint16_t *p)$/;"	f	class:Cpu
change_print_8bit	./cpu.cpp	/^void Cpu::change_print_8bit(uint8_t *p)$/;"	f	class:Cpu
columns	./video.h	/^    uint8_t columns, rows;$/;"	m	class:Video
cont	./testasm/codegolf.asm	/^cont:$/;"	l
cont1	./testasm/codegolf.asm	/^cont1:$/;"	l
cont2	./testasm/codegolf.asm	/^cont2:$/;"	l
control_reg_flag	./cpu.h	/^    uint16_t control_reg_ip, control_reg_flag;$/;"	m	class:Cpu
control_reg_ip	./cpu.h	/^    uint16_t control_reg_ip, control_reg_flag;$/;"	m	class:Cpu
count_code	./cpu.h	/^    uint32_t count_code;$/;"	m	class:Cpu
counter	./8253.h	/^    uint16_t counter[3];$/;"	m	class:Interval_Timer_8253
cpu	./disk.h	/^    Cpu *cpu;$/;"	m	class:Disk
cpu	./disk_handle.h	/^    Cpu *cpu;$/;"	m	class:disk_handle
cpu	./display.h	/^    Cpu *cpu;$/;"	m	class:Display
cpu	./video.h	/^    Cpu *cpu;$/;"	m	class:Video
current_scan	./timer.h	/^    uint64_t last_8253_count, last_irq0, scan_gap, last_scan_tick, current_scan;$/;"	m	class:timer
cursor	./testasm/codegolf.asm	/^cursor:$/;"	l
cursor_visable	./display.h	/^    uint8_t cursor_visable;$/;"	m	class:Display
cursor_x	./video.h	/^    uint16_t cursor_x, cursor_y, width, high;$/;"	m	class:Video
cursor_y	./video.h	/^    uint16_t cursor_x, cursor_y, width, high;$/;"	m	class:Video
cylinders	./disk.h	/^    uint16_t cylinders;$/;"	m	class:Disk
data	./keyboard.h	/^    uint8_t data;$/;"	m	class:Keyboard
disk_handle	./disk_handle.cpp	/^disk_handle::disk_handle()$/;"	f	class:disk_handle
disk_handle	./disk_handle.h	/^class disk_handle {$/;"	c
disk_map	./disk_handle.h	/^    map<uint8_t, Disk *> disk_map;$/;"	m	class:disk_handle
disk_operator	./disk_handle.cpp	/^void disk_handle::disk_operator()$/;"	f	class:disk_handle
display_buffer	./display.h	/^    uint32_t display_buffer[400][640];$/;"	m	class:Display
draw	./display.cpp	/^void Display::draw(void *tmp)$/;"	f	class:Display
fibloop	./testasm/codegolf.asm	/^fibloop:$/;"	l
filesize	./disk.h	/^    uint32_t filesize;$/;"	m	class:Disk
floppy_count	./disk_handle.h	/^    uint8_t hard_count, floppy_count;$/;"	m	class:disk_handle
halt	./cpu.h	/^    bool halt;$/;"	m	class:Cpu
hard_count	./disk_handle.h	/^    uint8_t hard_count, floppy_count;$/;"	m	class:disk_handle
heads	./disk.h	/^    uint8_t heads;$/;"	m	class:Disk
hello	./testasm/codegolf.asm	/^hello:$/;"	l
high	./video.h	/^    uint16_t cursor_x, cursor_y, width, high;$/;"	m	class:Video
hlt	./testasm/codegolf.asm	/^hlt:$/;"	l
i8253	./cpu.h	/^    Interval_Timer_8253 *i8253;$/;"	m	class:Cpu
i8253	./port_handle.h	/^    Interval_Timer_8253 *i8253;$/;"	m	class:port_handle
i8253	./timer.h	/^    Interval_Timer_8253 *i8253;$/;"	m	class:timer
i8253_tick_gap	./timer.h	/^    double irq0_timegap, i8253_tick_gap;$/;"	m	class:timer
i8259a	./cpu.h	/^    Interrupt_Controller_8259a *i8259a;$/;"	m	class:Cpu
i8259a	./keyboard.h	/^    Interrupt_Controller_8259a *i8259a;$/;"	m	class:Keyboard
i8259a	./port_handle.h	/^    Interrupt_Controller_8259a *i8259a;$/;"	m	class:port_handle
i8259a	./timer.h	/^    Interrupt_Controller_8259a *i8259a;$/;"	m	class:timer
if_flag	./cpu.h	/^    uint8_t if_flag, tf_flag;$/;"	m	class:Cpu
inc	./testasm/codegolf.asm	/^	inc di$/;"	d
init_8259a	./8259a.cpp	/^void Interrupt_Controller_8259a::init_8259a()$/;"	f	class:Interrupt_Controller_8259a
init_data_high	./8253.h	/^    uint8_t init_data_high[3], init_data_low[3];$/;"	m	class:Interval_Timer_8253
init_data_low	./8253.h	/^    uint8_t init_data_high[3], init_data_low[3];$/;"	m	class:Interval_Timer_8253
init_order	./8259a.h	/^    int8_t init_order;$/;"	m	class:Interrupt_Controller_8259a
insert_disk	./disk_handle.cpp	/^void disk_handle::insert_disk(uint8_t disk_num, Disk *disk)$/;"	f	class:disk_handle
inserted_disknum	./disk_handle.h	/^    vector<uint8_t> inserted_disknum;$/;"	m	class:disk_handle
interrupt	./video.cpp	/^void Video::interrupt()$/;"	f	class:Video
irq0_timegap	./timer.h	/^    double irq0_timegap, i8253_tick_gap;$/;"	m	class:timer
keyboard	./port_handle.h	/^    Keyboard *keyboard;$/;"	m	class:port_handle
lastAH	./disk.h	/^    uint8_t lastAH, lastCF;$/;"	m	class:Disk
lastCF	./disk.h	/^    uint8_t lastAH, lastCF;$/;"	m	class:Disk
last_8253_count	./timer.h	/^    uint64_t last_8253_count, last_irq0, scan_gap, last_scan_tick, current_scan;$/;"	m	class:timer
last_irq0	./timer.h	/^    uint64_t last_8253_count, last_irq0, scan_gap, last_scan_tick, current_scan;$/;"	m	class:timer
last_scan_tick	./timer.h	/^    uint64_t last_8253_count, last_irq0, scan_gap, last_scan_tick, current_scan;$/;"	m	class:timer
locked_data	./8253.h	/^    uint16_t locked_data[3], *locked_data_pointer[3];$/;"	m	class:Interval_Timer_8253
locked_data_pointer	./8253.h	/^    uint16_t locked_data[3], *locked_data_pointer[3];$/;"	m	class:Interval_Timer_8253
logic_operate	./video.cpp	/^inline uint8_t Video::logic_operate(uint8_t value, uint8_t plane_lock)$/;"	f	class:Video
main	./main.cpp	/^int main(int argc, char **argv)$/;"	f
master_base_vector	./8259a.h	/^    uint8_t master_base_vector;$/;"	m	class:Interrupt_Controller_8259a
memory	./testasm/codegolf.asm	/^memory:$/;"	l
numcont_1digit	./testasm/codegolf.asm	/^numcont_1digit:$/;"	l
numcont_2digit	./testasm/codegolf.asm	/^numcont_2digit:$/;"	l
numloop_2digit	./testasm/codegolf.asm	/^numloop_2digit:$/;"	l
numloop_3digit	./testasm/codegolf.asm	/^numloop_3digit:$/;"	l
pop	./testasm/codegolf.asm	/^	pop di$/;"	d
pop	./testasm/codegolf.asm	/^	pop dx$/;"	d
port_handle	./port_handle.cpp	/^port_handle::port_handle()$/;"	f	class:port_handle
port_handle	./port_handle.h	/^class port_handle {$/;"	c
port_handle_read16	./port_handle.cpp	/^uint16_t port_handle::port_handle_read16(uint16_t port_num)$/;"	f	class:port_handle
port_handle_read8	./port_handle.cpp	/^uint8_t port_handle::port_handle_read8(uint16_t port_num)$/;"	f	class:port_handle
port_handle_write16	./port_handle.cpp	/^void port_handle::port_handle_write16(uint16_t port_num, uint16_t value)$/;"	f	class:port_handle
port_handle_write8	./port_handle.cpp	/^void port_handle::port_handle_write8(uint16_t port_num, uint8_t value)$/;"	f	class:port_handle
ports_operate	./cpu.h	/^    port_handle *ports_operate;$/;"	m	class:Cpu
primecont	./testasm/codegolf.asm	/^primecont:$/;"	l
primeloop	./testasm/codegolf.asm	/^primeloop:$/;"	l
primeloop_inner	./testasm/codegolf.asm	/^primeloop_inner:$/;"	l
print	./testasm/codegolf.asm	/^print:$/;"	l
printchr	./testasm/codegolf.asm	/^printchr:$/;"	l
printdebug	./cpu.cpp	/^void Cpu::printdebug(uint8_t opcode, uint32_t count, uint32_t ip_addr)$/;"	f	class:Cpu
printf_my	./cpu.cpp	/^void Cpu::printf_my(uint16_t cotent)$/;"	f	class:Cpu
printloop	./testasm/codegolf.asm	/^printloop:$/;"	l
printnl	./testasm/codegolf.asm	/^printnl:$/;"	l
printnlloop	./testasm/codegolf.asm	/^printnlloop:$/;"	l
printnum	./testasm/codegolf.asm	/^printnum:$/;"	l
push	./testasm/codegolf.asm	/^	push di$/;"	d
push	./testasm/codegolf.asm	/^	push dx$/;"	d
ram	./cpu.h	/^    uint8_t *ram;$/;"	m	class:Cpu
read16_from_port	./cpu.cpp	/^uint16_t Cpu::read16_from_port(uint8_t port_num)$/;"	f	class:Cpu
read8_from_port	./cpu.cpp	/^uint8_t Cpu::read8_from_port(uint8_t port_num)$/;"	f	class:Cpu
read_8253	./8253.cpp	/^uint8_t Interval_Timer_8253::read_8253(uint8_t port_num)$/;"	f	class:Interval_Timer_8253
read_8259a	./8259a.cpp	/^uint8_t Interrupt_Controller_8259a::read_8259a(uint8_t port_num)$/;"	f	class:Interrupt_Controller_8259a
read_video	./video.cpp	/^uint8_t Video::read_video(uint16_t port_num)$/;"	f	class:Video
read_video_memory	./video.cpp	/^uint8_t Video::read_video_memory(uint32_t addr_offset)$/;"	f	class:Video
read_write	./disk.h	/^    fstream read_write;$/;"	m	class:Disk
readdisk	./disk.cpp	/^void Disk::readdisk(uint16_t sector_count, uint16_t cylinder, uint16_t sector, uint8_t head, uint8_t dirver_num, uint16_t mem_seg, uint16_t mem_offset)$/;"	f	class:Disk
rettest	./testasm/codegolf.asm	/^rettest:$/;"	l
rotate_right	./video.cpp	/^inline uint8_t Video::rotate_right(uint8_t value, uint8_t shift_bits)$/;"	f	class:Video
rows	./video.h	/^    uint8_t columns, rows;$/;"	m	class:Video
rw_mode	./8253.h	/^    uint8_t rw_mode[3], rw_step[3], active[3];$/;"	m	class:Interval_Timer_8253
rw_step	./8253.h	/^    uint8_t rw_mode[3], rw_step[3], active[3];$/;"	m	class:Interval_Timer_8253
scan_gap	./timer.h	/^    uint64_t last_8253_count, last_irq0, scan_gap, last_scan_tick, current_scan;$/;"	m	class:timer
screen_lock	./display.h	/^    pthread_mutex_t screen_lock;$/;"	m	class:Display
screen_p	./display.h	/^    SDL_Surface *screen_p;$/;"	m	class:Display
screen_p	./keyboard.h	/^    SDL_Surface *screen_p;$/;"	m	class:Keyboard
screen_update_flag	./video.h	/^    uint8_t screen_update_flag, Video_Mode;$/;"	m	class:Video
sectors	./disk.h	/^    uint8_t sectors;$/;"	m	class:Disk
seg_reg_cs	./cpu.h	/^    uint16_t seg_reg_cs, seg_reg_ds, seg_reg_ss, seg_reg_es;$/;"	m	class:Cpu
seg_reg_ds	./cpu.h	/^    uint16_t seg_reg_cs, seg_reg_ds, seg_reg_ss, seg_reg_es;$/;"	m	class:Cpu
seg_reg_es	./cpu.h	/^    uint16_t seg_reg_cs, seg_reg_ds, seg_reg_ss, seg_reg_es;$/;"	m	class:Cpu
seg_reg_replace_ds	./cpu.h	/^    uint16_t *seg_reg_replace_ds, *seg_reg_replace_ss;$/;"	m	class:Cpu
seg_reg_replace_ss	./cpu.h	/^    uint16_t *seg_reg_replace_ds, *seg_reg_replace_ss;$/;"	m	class:Cpu
seg_reg_ss	./cpu.h	/^    uint16_t seg_reg_cs, seg_reg_ds, seg_reg_ss, seg_reg_es;$/;"	m	class:Cpu
send_int_cpu	./8259a.cpp	/^uint8_t Interrupt_Controller_8259a::send_int_cpu()$/;"	f	class:Interrupt_Controller_8259a
setDisk_handle	./cpu.cpp	/^void Cpu::setDisk_handle(disk_handle *arg)$/;"	f	class:Cpu
setcpu	./disk.cpp	/^void Disk::setcpu(Cpu *arg)$/;"	f	class:Disk
setcpu	./disk_handle.cpp	/^void disk_handle::setcpu(Cpu *arg)$/;"	f	class:disk_handle
setcpu	./display.cpp	/^void Display::setcpu(Cpu *arg)$/;"	f	class:Display
setcpu	./video.cpp	/^void Video::setcpu(Cpu *arg)$/;"	f	class:Video
seti8253	./cpu.cpp	/^void Cpu::seti8253(Interval_Timer_8253 *arg)$/;"	f	class:Cpu
seti8253	./port_handle.cpp	/^void port_handle::seti8253(Interval_Timer_8253 *arg)$/;"	f	class:port_handle
seti8253	./timer.cpp	/^void timer::seti8253(Interval_Timer_8253 *arg)$/;"	f	class:timer
seti8259a	./cpu.cpp	/^void Cpu::seti8259a(Interrupt_Controller_8259a *arg)$/;"	f	class:Cpu
seti8259a	./port_handle.cpp	/^void port_handle::seti8259a(Interrupt_Controller_8259a *arg)$/;"	f	class:port_handle
seti8259a	./timer.cpp	/^void timer::seti8259a(Interrupt_Controller_8259a *arg)$/;"	f	class:timer
setkeyboard	./port_handle.cpp	/^void port_handle::setkeyboard(Keyboard *arg)$/;"	f	class:port_handle
setports_operate	./cpu.cpp	/^void Cpu::setports_operate(port_handle *arg)$/;"	f	class:Cpu
settimer	./cpu.cpp	/^void Cpu::settimer(timer *arg)$/;"	f	class:Cpu
setvideo	./cpu.cpp	/^void Cpu::setvideo(Video *arg)$/;"	f	class:Cpu
setvideo	./display.cpp	/^void Display::setvideo(Video *arg)$/;"	f	class:Display
setvideo	./port_handle.cpp	/^void port_handle::setvideo(Video *arg)$/;"	f	class:port_handle
setvideo	./timer.cpp	/^void timer::setvideo(Video *arg)$/;"	f	class:timer
squareloop	./testasm/codegolf.asm	/^squareloop:$/;"	l
start	./testasm/codegolf.asm	/^start:$/;"	l
tf_flag	./cpu.h	/^    uint8_t if_flag, tf_flag;$/;"	m	class:Cpu
timer	./timer.cpp	/^timer::timer()$/;"	f	class:timer
timer	./timer.h	/^class timer {$/;"	c
timer_init	./timer.cpp	/^void timer::timer_init()$/;"	f	class:timer
timer_tick	./timer.cpp	/^inline void timer::timer_tick()$/;"	f	class:timer
timing	./cpu.h	/^    timer *timing;$/;"	m	class:Cpu
trigger_int	./8259a.cpp	/^void Interrupt_Controller_8259a::trigger_int(uint8_t irq_num)$/;"	f	class:Interrupt_Controller_8259a
universal_reg_ah	./cpu.h	/^    uint8_t *universal_reg_ah, *universal_reg_al;$/;"	m	class:Cpu
universal_reg_al	./cpu.h	/^    uint8_t *universal_reg_ah, *universal_reg_al;$/;"	m	class:Cpu
universal_reg_ax	./cpu.h	/^    uint16_t universal_reg_ax, universal_reg_bx, universal_reg_cx, universal_reg_dx,$/;"	m	class:Cpu
universal_reg_bh	./cpu.h	/^    uint8_t *universal_reg_bh, *universal_reg_bl;$/;"	m	class:Cpu
universal_reg_bl	./cpu.h	/^    uint8_t *universal_reg_bh, *universal_reg_bl;$/;"	m	class:Cpu
universal_reg_bp	./cpu.h	/^             universal_reg_sp, universal_reg_bp, universal_reg_si, universal_reg_di;$/;"	m	class:Cpu
universal_reg_bx	./cpu.h	/^    uint16_t universal_reg_ax, universal_reg_bx, universal_reg_cx, universal_reg_dx,$/;"	m	class:Cpu
universal_reg_ch	./cpu.h	/^    uint8_t *universal_reg_ch, *universal_reg_cl;$/;"	m	class:Cpu
universal_reg_cl	./cpu.h	/^    uint8_t *universal_reg_ch, *universal_reg_cl;$/;"	m	class:Cpu
universal_reg_cx	./cpu.h	/^    uint16_t universal_reg_ax, universal_reg_bx, universal_reg_cx, universal_reg_dx,$/;"	m	class:Cpu
universal_reg_dh	./cpu.h	/^    uint8_t *universal_reg_dh, *universal_reg_dl;$/;"	m	class:Cpu
universal_reg_di	./cpu.h	/^             universal_reg_sp, universal_reg_bp, universal_reg_si, universal_reg_di;$/;"	m	class:Cpu
universal_reg_dl	./cpu.h	/^    uint8_t *universal_reg_dh, *universal_reg_dl;$/;"	m	class:Cpu
universal_reg_dx	./cpu.h	/^    uint16_t universal_reg_ax, universal_reg_bx, universal_reg_cx, universal_reg_dx,$/;"	m	class:Cpu
universal_reg_si	./cpu.h	/^             universal_reg_sp, universal_reg_bp, universal_reg_si, universal_reg_di;$/;"	m	class:Cpu
universal_reg_sp	./cpu.h	/^             universal_reg_sp, universal_reg_bp, universal_reg_si, universal_reg_di;$/;"	m	class:Cpu
video	./cpu.h	/^    Video *video;$/;"	m	class:Cpu
video	./display.h	/^    Video *video;$/;"	m	class:Display
video	./port_handle.h	/^    Video *video;$/;"	m	class:port_handle
video	./timer.h	/^    Video *video;$/;"	m	class:timer
video_fresh	./display.cpp	/^void *Display::video_fresh(void *tmp)$/;"	f	class:Display
width	./video.h	/^    uint16_t cursor_x, cursor_y, width, high;$/;"	m	class:Video
write16_to_port	./cpu.cpp	/^void Cpu::write16_to_port(uint8_t port_num, uint16_t value)$/;"	f	class:Cpu
write8_to_port	./cpu.cpp	/^void Cpu::write8_to_port(uint8_t port_num, uint8_t value)$/;"	f	class:Cpu
write_8253	./8253.cpp	/^void Interval_Timer_8253::write_8253(uint8_t port_num, uint8_t value)$/;"	f	class:Interval_Timer_8253
write_8259a	./8259a.cpp	/^void Interrupt_Controller_8259a::write_8259a(uint8_t port_num, uint8_t value)$/;"	f	class:Interrupt_Controller_8259a
write_video	./video.cpp	/^void Video::write_video(uint16_t port_num, uint8_t value)$/;"	f	class:Video
write_video_memory	./video.cpp	/^void Video::write_video_memory(uint32_t addr_offset, uint8_t value)$/;"	f	class:Video
writedisk	./disk.cpp	/^void Disk::writedisk(uint16_t sector_count, uint16_t cylinder, uint16_t sector, uint8_t head, uint8_t dirver_num, uint16_t mem_seg, uint16_t mem_offset)$/;"	f	class:Disk
~Disk	./disk.cpp	/^Disk::~Disk()$/;"	f	class:Disk
